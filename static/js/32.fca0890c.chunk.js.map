{"version":3,"sources":["pages/Mantenimientos/Mantenimientos.module.css","pages/Mantenimientos/Mantenimientos.js"],"names":["module","exports","demo-app","demo-app-top","demo-app-calendar","Mantenimientos","calendarComponentRef","React","createRef","state","calendarWeekends","calendarEvents","_this2","this","fechas","Axios","get","then","respuesta","data","payload","map","r","titulo","cliente","nombre","contrato","dias","ms","Date","getTime","id","push","title","start","color","date","end","overlap","rendering","setState","event","_this3","objAWS","operation","fechas programadas","newState","Object","assign","substring","put","_this4","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","_fullcalendar_react__WEBPACK_IMPORTED_MODULE_6__","locale","esLocale","defaultView","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","ref","weekends","events","dateClick","handleDateClick","editable","eventResizableFromStart","eventDrop","actualizarFecha","Component"],"mappings":"+EACAA,EAAAC,QAAA,CAAkBC,WAAA,iCAAAC,eAAA,qCAAAC,oBAAA,gSCYZC,6MAEFC,qBAAuBC,IAAMC,cAE7BC,MAAQ,CACJC,kBAAkB,EAClBC,eAAgB,wFAGE,IAAAC,EAAAC,KACZC,EAAO,GACXC,IAAMC,IAAI,4FAA4FC,KAAK,SAAAC,GAEzGA,EAAUC,KAAKC,QAAQC,IAAI,SAAAC,GACxB,IAAIC,EAAUD,EAAEE,QAAQC,OAAQ,IAAKH,EAAEI,SAAS,yBAOlD,OANEJ,EAAEI,SAAS,sBAAsBL,IAAI,SAAAM,GACpC,IAAIC,EAAK,IAAIC,KAAKF,GAAMG,UACpBC,EAAKT,EAAEI,SAASK,GAAG,IAAIH,EAE3B,OADAd,EAAOkB,KAAK,CAACD,GAAIA,EAAIE,MAAOV,EAASW,MAAOP,EAAMQ,MAAOb,EAAEE,QAAQW,MAAOC,KAAKR,IACxED,IAEHL,IAGVR,EAAOkB,KAAK,CAACE,MAAO,aAAaG,IAAK,IAAIR,KAAOS,SAAS,EAAMC,UAAW,aAAaJ,MAAO,QAC/FvB,EAAK4B,SAAS,CAAC7B,eAAgBG,8CAKrB2B,GAAM,IAAAC,EAAA7B,KAEhB8B,EAAO,CACPC,UAAU,0BACVxB,QAAQ,CACNW,GAAG,GACHc,qBAAqB,KAIvBC,EAAWC,OAAOC,OAAO,GAAInC,KAAKJ,OAEtCqC,EAASnC,eAAeU,IAAI,SAAAC,GAUtB,OATGA,EAAEW,QAAQQ,EAAMA,MAAMR,QACpBX,EAAES,KAAKU,EAAMA,MAAMV,IACpBT,EAAEY,MAAQO,EAAMA,MAAMP,MACtBS,EAAOvB,QAAQ,sBAAsBY,KAAKS,EAAMA,MAAMP,SAExDS,EAAOvB,QAAQW,GAAIT,EAAES,GAAGkB,UAAU,EAAG,IACrCN,EAAOvB,QAAQ,sBAAsBY,KAAKV,EAAEY,SAGvCZ,IAGXP,IAAMmC,IAAI,8EAA+EP,GACxF1B,KAAK,SAAAK,GAEJoB,EAAKF,SAASM,sCAMX,IAAAK,EAAAtC,KAEL,OACIuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,OAAQC,IACRC,YAAY,eACZC,OAAQ,CACNC,KAAM,mBACNC,OAAQ,QACRC,MAAO,mDAETC,QAAS,CAACC,IAAeC,IAAgBC,IAAmBC,KAC5DC,IAAKxD,KAAKP,qBACVgE,SAAUzD,KAAKJ,MAAMC,iBACrB6D,OAAQ1D,KAAKJ,MAAME,eACnB6D,UAAW3D,KAAK4D,gBAChBC,UAAQ,EACRC,yBAAuB,EACvBC,UAAW,SAACnC,GAAD,OAASU,EAAK0B,gBAAgBpC,cAnF9BqC,aA2GdzE","file":"static/js/32.fca0890c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"demo-app\":\"Mantenimientos_demo-app__38X4y\",\"demo-app-top\":\"Mantenimientos_demo-app-top__1P144\",\"demo-app-calendar\":\"Mantenimientos_demo-app-calendar__1e97a\"};","/* eslint-disable no-restricted-globals */\r\nimport React, { Component } from 'react';\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; \r\nimport esLocale from '@fullcalendar/core/locales/es';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport './Mantenimientos.module.css'\r\nimport { Container } from '@material-ui/core';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass Mantenimientos extends Component {\r\n\r\n    calendarComponentRef = React.createRef();\r\n  \r\n    state = {\r\n        calendarWeekends: true,\r\n        calendarEvents: [],\r\n    };\r\n\r\n      componentWillMount(){\r\n          let fechas=[]\r\n          Axios.get('https://x7t3agyvv3.execute-api.us-east-1.amazonaws.com/default/mantenimientosProgramados').then(respuesta=>{\r\n            //console.log(respuesta.data.payload)\r\n            respuesta.data.payload.map(r=>{   \r\n               let titulo=   r.cliente.nombre +' '+ r.contrato['nÃºmero de contrato']\r\n               r.contrato['fechas programadas'].map(dias=>{\r\n                let ms = new Date(dias).getTime(); \r\n                let id = r.contrato.id+'/'+ms    \r\n                fechas.push({id: id, title: titulo , start: dias, color: r.cliente.color, date:ms})    \r\n                return dias\r\n               })    \r\n             return r             \r\n          })\r\n\r\n          fechas.push({start: '2000-01-01',end: new Date(),overlap: false,rendering: 'background',color: 'red'})\r\n          this.setState({calendarEvents: fechas})\r\n          //console.log(fechas)\r\n      })\r\n    }\r\n\r\n    actualizarFecha(event){\r\n\r\n      let objAWS={\r\n          operation:'actualizarMantenimiento',\r\n          payload:{\r\n            id:'',\r\n            'fechas programadas':[]\r\n          }\r\n      };\r\n\r\n      let newState = Object.assign({}, this.state)\r\n       \r\n      newState.calendarEvents.map(r=>{     \r\n            if(r.title===event.event.title ){\r\n              if(r.id===event.event.id){\r\n                r.start = event.event.start\r\n                objAWS.payload['fechas programadas'].push(event.event.start)\r\n              }else{\r\n              objAWS.payload.id= r.id.substring(0, 11)\r\n              objAWS.payload['fechas programadas'].push(r.start)\r\n              }\r\n            }\r\n            return r\r\n        })\r\n        //console.log(objAWS)\r\n        Axios.put('https://0utuqhew54.execute-api.us-east-1.amazonaws.com/default/crudContrato', objAWS)\r\n        .then(r=>{\r\n\r\n          this.setState(newState)\r\n          //console.log(this.state)\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <Container>\r\n                <FullCalendar\r\n                  locale={esLocale}  \r\n                  defaultView=\"dayGridMonth\"\r\n                  header={{\r\n                    left: \"prev,next, today\",\r\n                    center: \"title\",\r\n                    right: \"dayGridMonth,timeGridWeek,timeGridDay,listMonth\"\r\n                  }}\r\n                  plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\r\n                  ref={this.calendarComponentRef}\r\n                  weekends={this.state.calendarWeekends}\r\n                  events={this.state.calendarEvents}\r\n                  dateClick={this.handleDateClick}\r\n                  editable\r\n                  eventResizableFromStart\r\n                  eventDrop={(event)=>this.actualizarFecha(event)\r\n                    //console.log(\"Event Drop\", this.state.calendarEvents)\r\n                  }\r\n                  \r\n                  //hiddenDays={[0,6]} Ocultar S y D\r\n                />\r\n          </Container>\r\n          );\r\n    }\r\n    // Agregar nuevos Mantenimientos\r\n    // handleDateClick = (arg) => {\r\n    //     if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\r\n    //       this.setState({  // add new event data\r\n    //         calendarEvents: this.state.calendarEvents.concat({ // creates a new array\r\n    //           title: 'New Event',\r\n    //           start: arg.date,\r\n    //           allDay: arg.allDay\r\n    //         })\r\n    //       })\r\n    //     }\r\n    //   }\r\n\r\n}\r\n\r\nexport default Mantenimientos;\r\n\r\n"],"sourceRoot":""}